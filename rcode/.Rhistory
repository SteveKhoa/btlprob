"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
View(data)
data <- import("./cpu-before.csv")%>% # rio::import
# Rename labels
names() <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "1000", data[,"temp"]))
View(data)
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "[^0-9.].", data[,"temp"]))
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "[^0-9.].", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "[^0-9.]", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]+", "", data[,"temp"]))
View(data)
data[,"temp"] <- as.numeric(gsub("[0-9.]+", "", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[0-9.]+", "sas", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
data[,"temp"] <- as.numeric(gsub("[0-9.]+", "s", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[0-9.]+", "1", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
View(data)
data[,"temp"] <- as.numeric(gsub("^[0-9.]+", "1", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]*", "1", data[,"temp"]))
View(data)
# Import data
setwd("***** YOUR WORKING DIRECTORY *******") # Set working directory
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("[^0-9.]*", "2", data[,"temp"]))
View(data)
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
data[,"temp"] <- as.numeric(gsub("100", "2", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- as.numeric(gsub("100", "", data[,"temp"]))
data[,"temp"] <- (gsub("100", "", data[,"temp"]))
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("100", "", data[,"temp"]))
View(data)
data[,"temp"] <- (gsub("[^0-9]+", "", data[,"temp"]))
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^0-9]+", "", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^A-Z]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
View(data)
data[,"temp"] <- (gsub("[^A-Z]+", ",", data[,"temp"]))
View(data)
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^\d]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^\d]+", ",", data[,"temp"]))
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^\\d]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))
View(data)
data[,"temp"] <- data[,temp]%>%
strsplit(",") %>%
unlist() %>%
as.numeric() %>%
max()
data[,"temp"] <- data[,"temp"]%>%
strsplit(",") %>%
unlist() %>%
as.numeric() %>%
max()
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))
View(data)
data[,"temp"]%>%
strsplit(",") %>%
unlist() %>%
as.numeric() %>%
max()
View(data)
data[,"temp"]%>%
strsplit(",") %>%
# View
# levels(factor(data[,"market"])) # See how many MARKET SEGMENTS are there.
# levels(factor(data[,"status"])) # See how many TYPES OF STATUS are there.
# --------------------- Global data preprocessing ---------------------------
#   Data preprocessing needed before all step
data[,"ldate"] <- (
as.yearqtr(data[,"ldate"], format = "Q%q'%y")
)
data[,"temp"]%>%
strsplit(",")
View(data)
data[,"temp"]%>%
strsplit(",") %>%
as.numeric()
data[,"temp"]
View(data)
View(data)
View(data)
View(data)
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
st strsplit( ",")
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit( ",")
View(data)
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
as.numeric()
text <- ",1,0,63,4,1,68,6,"
elements <- strsplit(text, ",")[[1]]
numbers <- as.numeric(elements)
largest_number <- max(numbers)
print(largest_number)
text <- ",1,0,63,4,1,68,6,"
elements <- strsplit(text, ",")[[1]]
numbers <- as.numeric(elements)
largest_number <- max(numbers)
print(largest_number)
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
unlist() %>%
as.numeric() %>%
max()
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
(gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
unlist() %>%
as.numeric()
data[,"temp"] <-
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
unlist() %>%
as.numeric()
huh<- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
unlist() %>%
as.numeric()
huh<- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
# View
# levels(factor(data[,"market"])) # See how many MARKET SEGMENTS are there.
# levels(factor(data[,"status"])) # See how many TYPES OF STATUS are there.
# --------------------- Global data preprocessing ---------------------------
#   Data preprocessing needed before all step
data[,"ldate"] <- (
as.yearqtr(data[,"ldate"], format = "Q%q'%y")
)
huh<- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",")
View(huh)
huh<- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric)
View(huh)
huh<- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
max()
View(huh)
max(1,2,3,4)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
unlist() %>%
max()
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
unlist()
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric)
write.csv(huh, file = "huh.csv")
write.csv(huh, file = "my_data.csv", row.names = FALSE)
View(huh)
# Create a sample data
my_data <- "100\n100\n100 72 \n200 72 3\n300\nNA"
my_data <- strsplit(my_data, "\n")[[1]]
# Create a sample data
my_data <- "100\n100\n100 72 \n200 72 3\n300\nNA"
my_data <- strsplit(my_data, "\n")[[1]]
# Split the data by blank lines
split_data <- split(my_data, cumsum(my_data == ""))
# Find the maximum value of each list
max_values <- lapply(split_data, function(x) max(as.numeric(x), na.rm = TRUE))
# Print the maximum value of each list
print(max_values)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
max(unlist(ls), na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
max(unlist(), na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric) %>%
max( na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
lapply(as.numeric)
View(huh)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
max(unlist(), na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
max(unlist(), na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))%>%
strsplit(",") %>%
unlist() %>%
max(na.rm=TRUE)
huh <- (gsub("[^0-9]+", ",", data[,"temp"]))
data[,temp] <- (gsub("[^0-9]+", ",", data[,"temp"]))
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,temp] <- (gsub("[^0-9]+", ",", data[,"temp"]))
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))
View(data)
huh %>$ strsplit(",") %>%
huh <- data[, "temp"]
huh <- data[, "temp"]
write.csv(huh, file = "my_data.csv", row.names = FALSE)
write.csv(data, file = "my_data.csv", row.names = FALSE)
# Create a sample data
data <- "100,75,69,72,100,100,80,72,8,63,4,71,77,100,80,73,5,67,7,70,105,105"
values <- unlist(strsplit(data, ","))
for(i in seq(1, length(values), 3)) {
temp_values <- as.integer(values[i:(i+2)])
max_temp <- max(temp_values)
cat(paste("Max value for", temp_values, "is", max_temp, "\n"))
}
data[, "temp"]
data[, "temp"]
data <- import("./cpu-before.csv") # rio::import
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"]
data[,"temp"][0]
data[,"temp"][0][1]
data[,"temp"][1]
View(data)
data[,"temp"][4]
View(data)
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))
data[,"temp"][0]
data[,"temp"][1]
data[,"temp"] <- strsplit(data$temp,",")
data[,"temp"] <- strsplit(data[, "temp"],",")
for (i in data[, temp]){
print (i)
}
for (i in data[, "temp"]){
print (i)
}
for (i in data[, "temp"]){
print (i)
strsplit(i, ",")
unlist(i)
}
for (i in data[, "temp"]){
print (i)
strsplit(i, ",")
unlist(i)
print(i)
}
print (i)
i <- strsplit(i, ",")
i <- unlist(i)
print(i)
i <- strsplit(i, ",")
i <- unlist(unlist(lapply(i, as.numeric)))
i <- strsplit(i, ",")
i <- unlist(unlist(lapply(i, as.numeric)))
print (i)
for (i in data[, "temp"]){
print (i)
i <- strsplit(i, ",")
i <- unlist(unlist(lapply(i, as.numeric)))
max(i)
print(i)
}
print (i)
for (i in data[, "temp"]){
print (i)
i <- unlist(unlist(lapply(i, as.numeric)))
max(i)
print(i)
}
i <- unlist(unlist(lapply(i, as.numeric)))
max(i)
i <- unlist(unlist(lapply(i, as.numeric)))
print (i)
for (i in data[, "temp"]){
print (i)
i <- unlist(unlist(lapply(i, as.numeric)))
max(i)
print(i)
}
strsplit(i,",")
strsplit(i,",")
for (i in data[, "temp"]){
print (i)
strsplit(i,",")
i <- unlist(unlist(lapply(i, as.numeric)))
print(i)
}
for (i in data[, "temp"]){
print (i)
i<- strsplit(i,",")
i <- unlist(unlist(lapply(i, as.numeric)))
print(i)
}
?max
for (i in data[, "temp"]){
print (i)
i<- strsplit(i,",")
i <- unlist(unlist(lapply(i, as.numeric)))
i <- max(i,na.rm = TRUE)
print(i)
}
warnings()
for (i in data[, "temp"]){
print (i)
i<- strsplit(i,",")
i <- unlist(unlist(lapply(i, as.numeric)))
i <- max(i,na.rm = TRUE)
data[,"temp"] <- i
}
View(data)
data <- import("./cpu-before.csv") # rio::import
# Rename labels
names(data) <- c("market", "status", "ldate", "litho",
"rprice", "ncore", "nthread", "bfreq", "tdp",
"memband", "temp") # Rename columns, easier to deal with
data[,"temp"] <- (gsub("[^0-9]+", ",", data[,"temp"]))
for (i in data[, "temp"]){
print (i)
i<- strsplit(i,",")
i <- unlist(unlist(lapply(i, as.numeric)))
i <- max(i,na.rm = TRUE)
}
View(data)
# Loop through each element in the "temp" column
for (i in seq_along(data[["temp"]])) {
# Split the element by commas and convert to numeric
temp_values <- strsplit(data[i, "temp"], ",")
temp_values <- unlist(lapply(temp_values, as.numeric))
# Find the maximum value and save to the "temp" column
data[i, "temp"] <- max(temp_values, na.rm = TRUE)
}
View(data)
# Loop through each element in the "temp" column
# Loop through each element in the "temp" column
for (i in seq_along(data[["temp"]])) {
# Split the element by commas and convert to numeric
temp_values <- strsplit(data[i, "temp"], ",")
temp_values <- unlist(lapply(temp_values, as.numeric))
# Find the maximum value and save to the "temp" column
max_value <- max(temp_values, na.rm = TRUE)
if (is.infinite(max_value)) {
max_value <- NA
}
data[i, "temp"] <- max_value
}
View(data)
