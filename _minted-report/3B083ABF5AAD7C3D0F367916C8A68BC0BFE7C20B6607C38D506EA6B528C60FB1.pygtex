\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  DATA CLEANING}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Input: cpu\PYGZhy{}short.csv}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Output: cpu\PYGZhy{}clean.csv}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Dataset flow}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}      cpu\PYGZhy{}raw.csv \PYGZhy{}\PYGZhy{}\PYGZhy{}importing.r\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZgt{} cpu\PYGZhy{}short.csv \PYGZhy{}\PYGZhy{}\PYGZhy{}cleaning.r\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZgt{} cpu\PYGZhy{}clean.csv}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Description:}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}      The dataset produced by this code is cleaned and all unecessary strings}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}      such as \PYGZsq{}nm\PYGZsq{}, \PYGZsq{}GHz\PYGZsq{}, \PYGZsq{}MHz\PYGZsq{} are cut out. Only numeric values are left.}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Caveats:}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}      The NAs values are intentially NOT removed yet. It must be further }
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}      processed for you own interest.}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  NK}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  \PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  LOAD NECESSARY PACKAEGS}
\PYG{n}{pacman}\PYG{o}{::}\PYG{n+nf}{p\PYGZus{}load}\PYG{p}{(}
\PYG{+w}{  }\PYG{n}{rio}\PYG{p}{,}\PYG{+w}{     }\PYG{c+c1}{\PYGZsh{} for imports \PYGZam{} exports}
\PYG{+w}{  }\PYG{n}{ggplot2}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{\PYGZsh{} for plots}
\PYG{+w}{  }\PYG{n}{zoo}\PYG{+w}{      }\PYG{c+c1}{\PYGZsh{} for year\PYGZhy{}quarter formats}
\PYG{+w}{  }\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  IMPORT THE DATA}
\PYG{n+nf}{setwd}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}/Users/admin/Desktop/\PYGZus{}probability\PYGZus{}PROJECT/btlprob/rcode\PYGZdq{}}\PYG{p}{)}\PYG{+w}{   }\PYG{c+c1}{\PYGZsh{} set working directory}
\PYG{n}{data}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{import}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}cpu\PYGZhy{}short.csv\PYGZdq{}}\PYG{p}{)}\PYG{+w}{        }\PYG{c+c1}{\PYGZsh{} rio::import}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  RENAME LABELS}
\PYG{n+nf}{names}\PYG{p}{(}\PYG{n}{data}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{c}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}market\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}status\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}ldate\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}litho\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }
\PYG{+w}{                 }\PYG{l+s}{\PYGZdq{}rprice\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}ncore\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}nthread\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}bfreq\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}tdp\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }
\PYG{+w}{                 }\PYG{l+s}{\PYGZdq{}memband\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}
\PYG{+w}{                }\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{\PYGZsh{} Rename columns into shorter names}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  CLEANING PROCESS}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  Since the original dataset contains non\PYGZhy{}numeric values, which is not suitable }
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  for analyzing. The cleaning process attempts to normalize the data, into usable}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  typeclasses.}
\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  \PYGZhy{}\PYGZhy{}\PYGZhy{}}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  DATE}
\PYG{c+c1}{\PYGZsh{}     note     \PYGZdq{}Q\PYGZpc{}q\PYGZsq{}\PYGZpc{}y\PYGZdq{}        : Our raw date format.}
\PYG{c+c1}{\PYGZsh{}                                \PYGZpc{}q means quarter}
\PYG{c+c1}{\PYGZsh{}                                \PYGZpc{}y means year}
\PYG{c+c1}{\PYGZsh{}                                Just like C\PYGZhy{}format!}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     Transform raw date format into zoo\PYGZsq{}s standard date format.}
\PYG{c+c1}{\PYGZsh{}     Zoo\PYGZsq{}s standard date format is easier to deal with, such as}
\PYG{c+c1}{\PYGZsh{}     }
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}ldate\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{p}{(}
\PYG{+w}{  }\PYG{n+nf}{as.yearqtr}\PYG{p}{(}\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}ldate\PYGZdq{}}\PYG{p}{],}\PYG{+w}{ }\PYG{n}{format}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Q\PYGZpc{}q\PYGZsq{}\PYGZpc{}y\PYGZdq{}}\PYG{p}{)}
\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  LITHO}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     Remove \PYGZdq{}nm\PYGZdq{} from all lithography values, so we used}
\PYG{c+c1}{\PYGZsh{}     gsub to substitute all patterns of \PYGZdq{} nm\PYGZdq{} with \PYGZdq{}\PYGZdq{}.}
\PYG{c+c1}{\PYGZsh{}    }
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}litho\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{as.numeric}\PYG{p}{(}
\PYG{+w}{  }\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} nm\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}litho\PYGZdq{}}\PYG{p}{])}
\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  RPRICE}
\PYG{c+c1}{\PYGZsh{}     note      /regex/       : PLEASE EXPLAIN THE REGEX VIETUNG}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     TO\PYGZhy{}DO}
\PYG{c+c1}{\PYGZsh{}     TO\PYGZhy{}DO}
\PYG{c+c1}{\PYGZsh{}     TO\PYGZhy{}DO}
\PYG{c+c1}{\PYGZsh{}}
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}rprice\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{gsub}\PYG{p}{(}
\PYG{+w}{  }\PYG{l+s}{\PYGZdq{}(\PYGZca{}\PYGZbs{}\PYGZbs{}\PYGZdl{}(\PYGZbs{}\PYGZbs{}d)+.(\PYGZbs{}\PYGZbs{}d)+ \PYGZhy{} )\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }
\PYG{+w}{  }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }
\PYG{+w}{  }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}rprice\PYGZdq{}}\PYG{p}{]}
\PYG{+w}{  }\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{}preporcess prices \PYGZhy{} stage 2 : change all \PYGZdq{}N/A\PYGZdq{} to N/A}
\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{rprice}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{ifelse}\PYG{p}{(}\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{rprice}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}N/A\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kc}{NA}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{rprice}\PYG{p}{)}
\PYG{c+c1}{\PYGZsh{} Preprocess prices \PYGZhy{} stage 3 : Cut out dollar sign \PYGZsq{}\PYGZdl{} \PYGZsq{}}
\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{rprice}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{as.numeric}\PYG{p}{(}\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZsq{}\PYGZbs{}\PYGZbs{}\PYGZdl{}|,\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZsq{}\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{rprice}\PYG{p}{))}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  BFREQ}
\PYG{c+c1}{\PYGZsh{}     note     /regex/       : Regex to match \PYGZdq{}GHz\PYGZdq{} or \PYGZdq{}MHz\PYGZdq{}}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     First, remove all occurences of \PYGZdq{}GHz\PYGZdq{} and \PYGZdq{}MHz\PYGZdq{}.}
\PYG{c+c1}{\PYGZsh{}     Second, all values greater than 10 must be MHz, we multiply them by 0.001}
\PYG{c+c1}{\PYGZsh{}}
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}bfreq\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{as.numeric}\PYG{p}{(}
\PYG{+w}{  }\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}( GHz)|( MHz)\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}bfreq\PYGZdq{}}\PYG{p}{])}
\PYG{p}{)}
\PYG{n}{data}\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[}\PYG{o}{!}\PYG{n+nf}{is.na}\PYG{p}{(}\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{bfreq}\PYG{p}{),}\PYG{+w}{ }\PYG{p}{]}\PYG{+w}{   }\PYG{c+c1}{\PYGZsh{} Truncate NAs because subscripting with NA}
\PYG{+w}{                                    }\PYG{c+c1}{\PYGZsh{} is not allowed.}
\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{bfreq}\PYG{p}{[}\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{bfreq}\PYG{+w}{ }\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{l+m}{10}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{bfreq}\PYG{p}{[}\PYG{n}{data}\PYG{o}{\PYGZdl{}}\PYG{n}{bfreq}\PYG{+w}{ }\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{l+m}{10}\PYG{p}{]}\PYG{o}{*}\PYG{l+m}{0.001}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  TDP}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     Remove all occurences of \PYGZdq{}W\PYGZdq{}}
\PYG{c+c1}{\PYGZsh{}}
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}tdp\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{as.numeric}\PYG{p}{(}
\PYG{+w}{  }\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} W\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}tdp\PYGZdq{}}\PYG{p}{])}
\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  MEMBAND}
\PYG{c+c1}{\PYGZsh{}}
\PYG{c+c1}{\PYGZsh{}     Remove all occurences of \PYGZdq{}GB/s\PYGZdq{}}
\PYG{c+c1}{\PYGZsh{}}
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}memband\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{as.numeric}\PYG{p}{(}
\PYG{+w}{  }\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} GB/s\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}memband\PYGZdq{}}\PYG{p}{])}
\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}\PYGZsh{}  TEMP}
\PYG{c+c1}{\PYGZsh{}     note    /regex/         : Match all decimal numbers and their sign}
\PYG{c+c1}{\PYGZsh{}                               perl=TRUE to enable extended Regex feature}
\PYG{c+c1}{\PYGZsh{}     }
\PYG{c+c1}{\PYGZsh{}     First, we match ony the decimal numbers, and separate them by comma,}
\PYG{c+c1}{\PYGZsh{}     (all characters unrelated to a specific decimal number are forced to become}
\PYG{c+c1}{\PYGZsh{}     comma)}
\PYG{c+c1}{\PYGZsh{}     Second, we use \PYGZsq{}strsplit\PYGZsq{} to separate the numbers, with the delimeter is \PYGZdq{},\PYGZdq{}}
\PYG{c+c1}{\PYGZsh{}     by doing that, we have a list, with each entry of that list contains multiple values}
\PYG{c+c1}{\PYGZsh{}     Third, for each entry \PYGZsq{}for (i in seq\PYGZus{}along(...))\PYGZsq{} of that list, we keep only the maximum }
\PYG{c+c1}{\PYGZsh{}     numeric value among the elements of the same entry. Entries with no valid numerics are}
\PYG{c+c1}{\PYGZsh{}     treated as NAs.}
\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n+nf}{gsub}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[\PYGZca{}0\PYGZhy{}9.\PYGZbs{}\PYGZbs{}\PYGZhy{}]+\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{[,}\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}\PYG{p}{]))}\PYG{+w}{  }\PYG{c+c1}{\PYGZsh{} }
\PYG{n+nf}{for }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{n}{in}\PYG{+w}{ }\PYG{n+nf}{seq\PYGZus{}along}\PYG{p}{(}\PYG{n}{data}\PYG{p}{[[}\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}\PYG{p}{]]))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{                    }\PYG{c+c1}{\PYGZsh{} For each elements in the same entry}
\PYG{+w}{  }\PYG{n}{temp\PYGZus{}values}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{strsplit}\PYG{p}{(}\PYG{n}{data}\PYG{p}{[}\PYG{n}{i}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}\PYG{p}{],}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{},\PYGZdq{}}\PYG{p}{)}\PYG{+w}{           }\PYG{c+c1}{\PYGZsh{} Split into a list of words}
\PYG{+w}{  }\PYG{n}{temp\PYGZus{}values}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{unlist}\PYG{p}{(}\PYG{n+nf}{lapply}\PYG{p}{(}\PYG{n}{temp\PYGZus{}values}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{as.numeric}\PYG{p}{))}\PYG{+w}{  }\PYG{c+c1}{\PYGZsh{} Transform them into equivalent numerics}
\PYG{+w}{  }\PYG{n}{max\PYGZus{}value}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n+nf}{max}\PYG{p}{(}\PYG{n}{temp\PYGZus{}values}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{na.rm}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k+kc}{TRUE}\PYG{p}{)}\PYG{+w}{             }\PYG{c+c1}{\PYGZsh{} Find max}
\PYG{+w}{  }\PYG{n+nf}{if }\PYG{p}{(}\PYG{n+nf}{is.infinite}\PYG{p}{(}\PYG{n}{max\PYGZus{}value}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{                           }\PYG{c+c1}{\PYGZsh{} Is it an invalid numeric?}
\PYG{+w}{    }\PYG{n}{max\PYGZus{}value}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{k+kc}{NA}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{  }\PYG{n}{data}\PYG{p}{[}\PYG{n}{i}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}temp\PYGZdq{}}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZhy{}}\PYG{+w}{ }\PYG{n}{max\PYGZus{}value}\PYG{+w}{                            }\PYG{c+c1}{\PYGZsh{} Store the maximum value}
\PYG{p}{\PYGZcb{}}

\PYG{n+nf}{export}\PYG{p}{(}\PYG{n}{data}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}cpu\PYGZhy{}clean.csv\PYGZdq{}}\PYG{p}{)}
\end{Verbatim}
